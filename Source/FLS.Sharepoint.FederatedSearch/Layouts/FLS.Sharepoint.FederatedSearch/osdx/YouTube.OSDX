<OpenSearchDescription xmlns="http://a9.com/-/spec/opensearch/1.1/">
  <ShortName>YouTube</ShortName>
  <InternalName xmlns="http://schemas.microsoft.com/Search/2007/location">YouTube</InternalName>
  <Description>Returns image results from youtube.com site search engine</Description>
  <Language></Language>
  <LocationType xmlns="http://schemas.microsoft.com/Search/2007/location">OpenSearch</LocationType>
  <Version xmlns="http://schemas.microsoft.com/Search/2007/location">1.0.0.0</Version>
  <IsPrefixPattern xmlns="http://schemas.microsoft.com/Search/2007/location">False</IsPrefixPattern>
  <Url type="application/rss+xml" template="http://www.youtube.com/rss/tag/{searchTerms}.rss"/>
  <ConnectionUrlTemplate xmlns="http://schemas.microsoft.com/Search/2007/location">http://www.youtube.com/rss/tag/{searchTerms}.rss</ConnectionUrlTemplate>
  <MoreLinkTemplate xmlns="http://schemas.microsoft.com/Search/2007/location">http://www.youtube.com/results?search_query={searchTerms}&amp;search=Search</MoreLinkTemplate>
  <CreationDate xmlns="http://schemas.microsoft.com/Search/2007/location">10/30/2007 9:51:45 PM</CreationDate>
  <LastModifiedDate xmlns="http://schemas.microsoft.com/Search/2007/location">10/30/2007 9:53:53 PM</LastModifiedDate>
  <ExpirationDate xmlns="http://schemas.microsoft.com/Search/2007/location">1/1/0001 12:00:00 AM</ExpirationDate>
  <Visualization name="summary" xmlns="http://schemas.microsoft.com/Search/2007/location">
    <Xsl>
      <xsl:stylesheet xmlns:x="http://www.w3.org/2001/XMLSchema" version="1.0" exclude-result-prefixes="xsl ddwrt msxsl srwrt" xmlns:ddwrt="http://schemas.microsoft.com/WebParts/v2/DataView/runtime" xmlns:srwrt="http://schemas.microsoft.com/WebParts/v3/searchresults/runtime" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:rss1="http://purl.org/rss/1.0/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:atom2="http://purl.org/atom/ns#">
        <xsl:param name="ResultsPerPage">9</xsl:param>
        <xsl:param name="IsDesignMode">True</xsl:param>
        <xsl:param name="UrlMaxLength">50</xsl:param>
        <xsl:param name="SummaryMaxLength">300</xsl:param>
        <xsl:param name="ShowMoreLink">true</xsl:param>
        <xsl:param name="MoreLink"></xsl:param>
        <xsl:param name="MoreLinkLabel"></xsl:param>
        <xsl:param name="IdPrefix"></xsl:param>
        <xsl:param name="WebpartTitle"></xsl:param>
        <xsl:param name="DefaultIconDescription"></xsl:param>
        <xsl:param name="BrandingIcon"></xsl:param>
        <xsl:template match="rss">
          <xsl:call-template name="RSSMainTemplate" />
        </xsl:template>
        <xsl:template name="GetLink">
          <xsl:value-of select="link" />
          <img src="{link}" xmlns="" />
        </xsl:template>
        <xsl:template name="GetTitle">
          <xsl:value-of select="title" />
        </xsl:template>
        <xsl:template name="GetDescription">
          <xsl:value-of select="description" />
        </xsl:template>
        <xsl:template name="GetItemIcon">
          <xsl:value-of select="string('/_layouts/images/html16.gif')" />
        </xsl:template>
        <xsl:template name="GetItemIconDescription">
          <xsl:value-of select="$DefaultIconDescription" />
        </xsl:template>
        <xsl:template name="RSSMainTemplate">
          <xsl:variable name="Rows" select="channel/item" />
          <xsl:variable name="RowCount" select="count($Rows)" />
          <xsl:if test="($RowCount &gt; 0)">
            <div class="ms-searchsummarymain" xmlns="">
              <div class="ms-searchChannelTitle">
                <span class="ms-searchChannelTitle">
                  <xsl:call-template name="GetBrandingImage" />YouTube Results
                </span>
              </div>
              <xsl:call-template name="MainTemplate.body">
                <xsl:with-param name="Rows" select="$Rows" />
                <xsl:with-param name="RowCount" select="count($Rows)" />
                <xsl:with-param name="ShowIcon" select="true()" />
                <xsl:with-param name="StyleClassPrefix" select="string('ms-searchsummary')" />
              </xsl:call-template>
              <xsl:call-template name="MoreLinkTemplate">
                <xsl:with-param name="StyleClassPrefix" select="string('ms-searchsummary')" />
              </xsl:call-template>
            </div>
          </xsl:if>
        </xsl:template>
        <xsl:template name="MainTemplate.body">
          <xsl:param name="Rows" />
          <xsl:param name="RowCount" />
          <xsl:param name="ShowIcon" />
          <xsl:param name="StyleClassPrefix" />
          <xsl:variable name="BodyClass" select="concat($StyleClassPrefix,'body')" />
          <div class="{$BodyClass}" xmlns="">
            <xsl:for-each select="$Rows">
              <xsl:variable name="CurPosition" select="position()" />
              <xsl:variable name="CurrentId" select="concat($IdPrefix,$CurPosition)" />
              <xsl:variable name="link">
                <xsl:call-template name="GetLink" />
              </xsl:variable>
              <xsl:variable name="title">
                <xsl:call-template name="GetTitle" />
              </xsl:variable>
              <xsl:if test="($CurPosition &lt;= $ResultsPerPage)">
                <xsl:variable name="TitleClass" select="concat($StyleClassPrefix,'Title')" />
                <xsl:call-template name="MainTemplate.description">
                  <xsl:with-param name="CurrentId" select="$CurrentId" />
                  <xsl:with-param name="Link" select="$link" />
                  <xsl:with-param name="StyleClassPrefix" select="$StyleClassPrefix" />
                </xsl:call-template>
              </xsl:if>
            </xsl:for-each>
          </div>
        </xsl:template>
        <xsl:template name="MainTemplate.description">
          <xsl:param name="CurrentId" />
          <xsl:param name="Link" />
          <xsl:param name="StyleClassPrefix" />
          <xsl:variable name="DivId" select="concat($CurrentId,'_d')" />
          <xsl:variable name="LinkId" select="concat($CurrentId,'_l')" />
          <xsl:variable name="DescOuterClass" select="concat($StyleClassPrefix,'descouter')" />
          <xsl:variable name="description">
            <xsl:call-template name="GetDescription" />
          </xsl:variable>
          <xsl:if test="string-length($description) &gt; 0">
            <xsl:variable name="DescLongText">
              <xsl:call-template name="GetPlainTextFromHtml">
                <xsl:with-param name="Html" select="$description" />
              </xsl:call-template>
            </xsl:variable>
            <xsl:variable name="DescText">
              <xsl:call-template name="TrimIfGreaterThanMax">
                <xsl:with-param name="Source" select="$DescLongText" />
                <xsl:with-param name="MaxLength" select="$SummaryMaxLength" />
              </xsl:call-template>
            </xsl:variable>
            <xsl:variable name="DescClass" select="concat($StyleClassPrefix,'desc')" />
          </xsl:if>
          <xsl:variable name="UrlClass" select="concat($StyleClassPrefix,'Url')" />
          <xsl:variable name="ShortLink">
            <xsl:call-template name="TrimIfGreaterThanMax">
              <xsl:with-param name="Source" select="$Link" />
              <xsl:with-param name="MaxLength" select="$UrlMaxLength" />
            </xsl:call-template>
          </xsl:variable>
          <a id="{LinkId}" href="{ddwrt:EnsureAllowedProtocol(string($Link))}" xmlns="">
            <img src="{substring-after(substring-before($description,'&quot; align='),'img src=&quot;')}" width="80" height="60" border="0" />
          </a>
        </xsl:template>
        <xsl:template name="MoreLinkTemplate">
          <xsl:param name="StyleClassPrefix" />
          <xsl:variable name="MoreLinkClass" select="concat($StyleClassPrefix,'morelink')" />
          <xsl:if test="$ShowMoreLink = true()">
            <div class="{$MoreLinkClass}" xmlns="">
              <a href="{ddwrt:EnsureAllowedProtocol($MoreLink)}">
                <xsl:value-of select="$MoreLinkLabel" />
              </a>
            </div>
          </xsl:if>
        </xsl:template>
        <xsl:template name="GetSafeHtml">
          <xsl:param name="Html" />
          <xsl:choose>
            <xsl:when test="$IsDesignMode = 'True'">
              <xsl:value-of select="$Html" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="srwrt:MakeSafe($Html)" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:template>
        <xsl:template name="GetPlainTextFromHtml">
          <xsl:param name="Html" />
          <xsl:choose>
            <xsl:when test="$IsDesignMode = 'True'">
              <xsl:value-of select="$Html" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="srwrt:GetPlainTextFromHtml($Html)" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:template>
        <xsl:template name="TrimIfGreaterThanMax">
          <xsl:param name="Source" />
          <xsl:param name="MaxLength" />
          <xsl:choose>
            <xsl:when test="string-length($Source) &gt; $MaxLength">
              <xsl:value-of select="substring($Source, 1, $MaxLength)" />...
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="$Source" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:template>
        <xsl:template name="GetBrandingImage">
          <xsl:if test="string-length($BrandingIcon) &gt; 0">
            <img src="{$BrandingIcon}" xmlns="" />
          </xsl:if>
        </xsl:template>
      </xsl:stylesheet>
    </Xsl>
    <Properties>
      &lt;Columns&gt;
      &lt;Column Name="title"/&gt;
      &lt;Column Name="link"/&gt;
      &lt;Column Name="description"/&gt;
      &lt;/Columns&gt;
    </Properties>
    <SampleData>
      <rss version="2.0" xmlns="">
        <channel>
          <title></title>
          <link>http://www.sample.com/</link>
          <description></description>
          <item>
            <title>文档或网页的标题</title>
            <link></link>
            <description>这是文档或网页的摘要。该摘要是根据查询词的匹配项从原始文档生成的。在某些情况下，摘要是由作者提供的说明。</description>
          </item>
        </channel>
      </rss>
    </SampleData>
  </Visualization>
  <Visualization name="topanswer" xmlns="http://schemas.microsoft.com/Search/2007/location">
    <Xsl>
      <xsl:stylesheet xmlns:x="http://www.w3.org/2001/XMLSchema" version="1.0" exclude-result-prefixes="xsl ddwrt msxsl srwrt" xmlns:ddwrt="http://schemas.microsoft.com/WebParts/v2/DataView/runtime" xmlns:srwrt="http://schemas.microsoft.com/WebParts/v3/searchresults/runtime" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:rss1="http://purl.org/rss/1.0/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:atom2="http://purl.org/atom/ns#">
        <xsl:param name="ResultsPerPage">3</xsl:param>
        <xsl:param name="IsDesignMode">True</xsl:param>
        <xsl:param name="UrlMaxLength">50</xsl:param>
        <xsl:param name="SummaryMaxLength">300</xsl:param>
        <xsl:param name="ShowMoreLink">true</xsl:param>
        <xsl:param name="MoreLink"></xsl:param>
        <xsl:param name="MoreLinkLabel"></xsl:param>
        <xsl:param name="IdPrefix"></xsl:param>
        <xsl:param name="WebpartTitle"></xsl:param>
        <xsl:param name="DefaultIconDescription"></xsl:param>
        <xsl:param name="BrandingIcon"></xsl:param>
        <xsl:template match="rss">
          <xsl:call-template name="RSSMainTemplate" />
        </xsl:template>
        <xsl:template name="GetLink">
          <xsl:value-of select="link" />
        </xsl:template>
        <xsl:template name="GetTitle">
          <xsl:value-of select="title" />
        </xsl:template>
        <xsl:template name="GetDescription">
          <xsl:value-of select="description" />
        </xsl:template>
        <xsl:template name="GetItemIcon">
          <xsl:value-of select="string('/_layouts/images/html16.gif')" />
        </xsl:template>
        <xsl:template name="GetItemIconDescription">
          <xsl:value-of select="$DefaultIconDescription" />
        </xsl:template>
        <xsl:template name="RSSMainTemplate">
          <xsl:variable name="Rows" select="channel/item" />
          <xsl:variable name="RowCount" select="count($Rows)" />
          <xsl:if test="($RowCount &gt; 0)">
            <div class="ms-searchtamain" xmlns="">
              <div class="ms-searchtaChannelTitle">
                <span class="ms-searchtaChannelTitle">
                  <xsl:call-template name="GetBrandingImage" />YouTube Results
                </span>
              </div>
              <xsl:call-template name="MainTemplate.body">
                <xsl:with-param name="Rows" select="$Rows" />
                <xsl:with-param name="RowCount" select="count($Rows)" />
                <xsl:with-param name="ShowIcon" select="true()" />
                <xsl:with-param name="StyleClassPrefix" select="string('ms-searchta')" />
              </xsl:call-template>
              <xsl:call-template name="MoreLinkTemplate">
                <xsl:with-param name="StyleClassPrefix" select="string('ms-searchta')" />
              </xsl:call-template>
            </div>
          </xsl:if>
        </xsl:template>
        <xsl:template name="MainTemplate.body">
          <xsl:param name="Rows" />
          <xsl:param name="RowCount" />
          <xsl:param name="ShowIcon" />
          <xsl:param name="StyleClassPrefix" />
          <xsl:variable name="BodyClass" select="concat($StyleClassPrefix,'body')" />
          <div class="{$BodyClass}" xmlns="">
            <xsl:for-each select="$Rows">
              <xsl:variable name="CurPosition" select="position()" />
              <xsl:variable name="CurrentId" select="concat($IdPrefix,$CurPosition)" />
              <xsl:variable name="link">
                <xsl:call-template name="GetLink" />
              </xsl:variable>
              <xsl:variable name="title">
                <xsl:call-template name="GetTitle" />
              </xsl:variable>
              <xsl:if test="($CurPosition &lt;= $ResultsPerPage)">
                <xsl:variable name="TitleClass" select="concat($StyleClassPrefix,'Title')" />
                <div class="{$TitleClass}">
                  <xsl:variable name="SafeHtml">
                    <xsl:call-template name="GetSafeHtml">
                      <xsl:with-param name="Html" select="$title" />
                    </xsl:call-template>
                  </xsl:variable>
                  <a id="{$CurrentId}" class="{$TitleClass}" href="{ddwrt:EnsureAllowedProtocol($link)}">
                    <xsl:if test="$ShowIcon = true()">
                      <xsl:variable name="itemIconUrl">
                        <xsl:call-template name="GetItemIcon" />
                      </xsl:variable>
                      <xsl:variable name="itemIconDescription">
                        <xsl:call-template name="GetItemIconDescription" />
                      </xsl:variable>
                      <img src="{$itemIconUrl}" alt="{$itemIconDescription}" />
                    </xsl:if>
                    <xsl:value-of select="$SafeHtml" disable-output-escaping="yes" />
                  </a>
                </div>
                <xsl:call-template name="MainTemplate.description">
                  <xsl:with-param name="CurrentId" select="$CurrentId" />
                  <xsl:with-param name="Link" select="$link" />
                  <xsl:with-param name="StyleClassPrefix" select="$StyleClassPrefix" />
                </xsl:call-template>
              </xsl:if>
            </xsl:for-each>
          </div>
        </xsl:template>
        <xsl:template name="MainTemplate.description">
          <xsl:param name="CurrentId" />
          <xsl:param name="Link" />
          <xsl:param name="StyleClassPrefix" />
          <xsl:variable name="DivId" select="concat($CurrentId,'_d')" />
          <xsl:variable name="LinkId" select="concat($CurrentId,'_l')" />
          <xsl:variable name="DescOuterClass" select="concat($StyleClassPrefix,'descouter')" />
          <div id="{$DivId}" class="{$DescOuterClass}" xmlns="">
            <xsl:variable name="description">
              <xsl:call-template name="GetDescription" />
            </xsl:variable>
            <xsl:if test="string-length($description) &gt; 0">
              <xsl:variable name="DescLongText">
                <xsl:call-template name="GetPlainTextFromHtml">
                  <xsl:with-param name="Html" select="$description" />
                </xsl:call-template>
              </xsl:variable>
              <xsl:variable name="DescText">
                <xsl:call-template name="TrimIfGreaterThanMax">
                  <xsl:with-param name="Source" select="$DescLongText" />
                  <xsl:with-param name="MaxLength" select="$SummaryMaxLength" />
                </xsl:call-template>
              </xsl:variable>
              <xsl:variable name="DescClass" select="concat($StyleClassPrefix,'desc')" />
              <div class="{$DescClass}">
                <xsl:value-of select="$DescText" />
              </div>
            </xsl:if>
            <xsl:variable name="UrlClass" select="concat($StyleClassPrefix,'Url')" />
            <div class="{$UrlClass}">
              <xsl:variable name="ShortLink">
                <xsl:call-template name="TrimIfGreaterThanMax">
                  <xsl:with-param name="Source" select="$Link" />
                  <xsl:with-param name="MaxLength" select="$UrlMaxLength" />
                </xsl:call-template>
              </xsl:variable>
              <a id="{LinkId}" href="{ddwrt:EnsureAllowedProtocol(string($Link))}">
                <xsl:value-of select="$ShortLink" />
              </a>
            </div>
          </div>
        </xsl:template>
        <xsl:template name="MoreLinkTemplate">
          <xsl:param name="StyleClassPrefix" />
          <xsl:variable name="MoreLinkClass" select="concat($StyleClassPrefix,'morelink')" />
          <xsl:if test="$ShowMoreLink = true()">
            <div class="{$MoreLinkClass}" xmlns="">
              <a href="{ddwrt:EnsureAllowedProtocol($MoreLink)}">
                <xsl:value-of select="$MoreLinkLabel" />
              </a>
            </div>
          </xsl:if>
        </xsl:template>
        <xsl:template name="GetSafeHtml">
          <xsl:param name="Html" />
          <xsl:choose>
            <xsl:when test="$IsDesignMode = 'True'">
              <xsl:value-of select="$Html" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="srwrt:MakeSafe($Html)" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:template>
        <xsl:template name="GetPlainTextFromHtml">
          <xsl:param name="Html" />
          <xsl:choose>
            <xsl:when test="$IsDesignMode = 'True'">
              <xsl:value-of select="$Html" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="srwrt:GetPlainTextFromHtml($Html)" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:template>
        <xsl:template name="TrimIfGreaterThanMax">
          <xsl:param name="Source" />
          <xsl:param name="MaxLength" />
          <xsl:choose>
            <xsl:when test="string-length($Source) &gt; $MaxLength">
              <xsl:value-of select="substring($Source, 1, $MaxLength)" />...
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="$Source" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:template>
        <xsl:template name="GetBrandingImage">
          <xsl:if test="string-length($BrandingIcon) &gt; 0">
            <img src="{$BrandingIcon}" xmlns="" />
          </xsl:if>
        </xsl:template>
      </xsl:stylesheet>
    </Xsl>
    <Properties>
      &lt;Columns&gt;
      &lt;Column Name="title"/&gt;
      &lt;Column Name="link"/&gt;
      &lt;Column Name="description"/&gt;
      &lt;/Columns&gt;
    </Properties>
    <SampleData>
      <rss version="2.0" xmlns="">
        <channel>
          <title></title>
          <link>http://www.sample.com/</link>
          <description></description>
          <item>
            <title>文档或网页的标题</title>
            <link></link>
            <description>这是文档或网页的摘要。该摘要是根据查询词的匹配项从原始文档生成的。在某些情况下，摘要是由作者提供的说明。</description>
          </item>
        </channel>
      </rss>
    </SampleData>
  </Visualization>
</OpenSearchDescription>